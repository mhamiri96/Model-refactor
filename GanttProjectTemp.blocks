start b1
Attribute(GanttTXTOpen,area,GanttGraphicArea,N,package);
Attribute(GanttTXTOpen,myTaskManager,TaskManager,N,private);
Attribute(GanttTXTOpen,prj,GanttProject,N,package);
Attribute(GanttTXTOpen,treePanel,GanttTree,N,package);
Class(GanttTXTOpen,N,N,public);
Method(GanttTXTOpen,GanttTXTOpen,N,Y,N,N,public);
Method(GanttTXTOpen,load,boolean,Y,N,N,public);
Parameter(GanttProject,importcbk,openerGanttTXTOpen,local);
Parameter(GanttTXTOpen,GanttTXTOpen,appli,GanttProject,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,gra,GanttGraphicArea,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,taskManager,TaskManager,declaration);
Parameter(GanttTXTOpen,GanttTXTOpen,tree,GanttTree,declaration);
Parameter(GanttTXTOpen,load,br,BufferedReader,local);
Parameter(GanttTXTOpen,load,f,File,declaration);
Parameter(GanttTXTOpen,load,s,TaskNameString,local);
Parameter(GanttTXTOpen,load,task,GanttTask,local);
Relation(GanttProject;importcbk;load,GanttTXTOpen,File);
Relation(GanttTXTOpen;load;addObject,GanttTree,Object-DefaultMutableTreeNode);
Relation(GanttTXTOpen;load;createTask,TaskManager,N);
Relation(GanttTXTOpen;load;equals,String,Object);
Relation(GanttTXTOpen;load;getTaskColor,GanttGraphicArea,N);
Relation(GanttTXTOpen;load;readLine,BufferedReader,N);
Relation(GanttTXTOpen;load;ready,BufferedReader,N);
Relation(GanttTXTOpen;load;registerTask,TaskManager,Task);
Relation(GanttTXTOpen;load;setColor,TaskImpl,Color);
Relation(GanttTXTOpen;load;setLength,GanttTask,int);
Relation(GanttTXTOpen;load;setName,TaskImpl,String);
end b1
start b2
Attribute(GanttCSVExport,prjInfos,PrjInfos,N,private);
Attribute(GanttProject,prjInfos,PrjInfos,N,public);
Attribute(GanttXFIGSaver,prjInfos,PrjInfos,N,private);
Attribute(PrjInfos,_sDescription,String,N,public);
Attribute(PrjInfos,_sOrganization,String,N,public);
Attribute(PrjInfos,_sProjectName,String,N,public);
Attribute(PrjInfos,_sWebLink,String,N,public);
Class(PrjInfos,N,N,public);
Method(NewProjectWizard,createNewProject,PrjInfos,Y,N,N,public);
Method(PrjInfos,PrjInfos,N,N,N,N,public);
Method(PrjInfos,PrjInfos,N,Y,N,N,public);
Method(PrjInfos,getDescription,String,N,N,N,public);
Method(PrjInfos,getName,String,N,N,N,public);
Method(PrjInfos,getOrganization,String,N,N,N,public);
Method(PrjInfos,getWebLink,String,N,N,N,public);
Parameter(GanttCSVExport,GanttCSVExport,prjInfos,PrjInfos,declaration);
Parameter(GanttHTMLExport,save,prjInfos,PrjInfos,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,prjInfos,PrjInfos,declaration);
Parameter(PrjInfos,PrjInfos,sDescription,String,declaration);
Parameter(PrjInfos,PrjInfos,sOrganization,String,declaration);
Parameter(PrjInfos,PrjInfos,sProjectName,String,declaration);
Parameter(PrjInfos,PrjInfos,sWebLink,String,declaration);
Relation(GanttHTMLExport;save;getDescription,PrjInfos,N);
Relation(GanttHTMLExport;save;getName,PrjInfos,N);
Relation(GanttHTMLExport;save;getOrganization,PrjInfos,N);
Relation(GanttHTMLExport;save;getWebLink,PrjInfos,N);
Relation(GanttProject;doExport;save,GanttHTMLExport,File-PrjInfos-GanttProject-GanttTree-GanttGraphicArea-ResourceLoadGraphicArea-GanttExportSettings);
Relation(GanttProject;getDescription;getDescription,PrjInfos,N);
Relation(GanttProject;getOrganization;getOrganization,PrjInfos,N);
Relation(GanttProject;getWebLink;getWebLink,PrjInfos,N);
end b2
start b3
Attribute(DeprecatedProjectExportData,myExportOptions,GanttExportSettings,N,package);
Attribute(DeprecatedProjectExportData,myFilename,String,N,package);
Attribute(DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,N,package);
Attribute(DeprecatedProjectExportData,myProject,GanttProject,N,package);
Attribute(DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,N,package);
Attribute(DeprecatedProjectExportData,myTree,GanttTree,N,package);
Attribute(DeprecatedProjectExportData,myXslFoScript,String,N,package);
Class(DeprecatedProjectExportData,N,N,public);
Method(DeprecatedProjectExportData,DeprecatedProjectExportData,N,Y,N,N,public);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myExportOptions,GanttExportSettings,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myFilename,String,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myGanttChart,GanttGraphicArea,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myProject,GanttProject,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myResourceChart,ResourceLoadGraphicArea,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myTree,GanttTree,declaration);
Parameter(DeprecatedProjectExportData,DeprecatedProjectExportData,myXslFoScript,String,declaration);
Parameter(GanttProject,doExport,exportDataDeprecatedProjectExportData,local);
Parameter(PDFExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Parameter(ProjectExportProcessor,doExport,exportData,DeprecatedProjectExportData,declaration);
Relation(GanttProject;doExport;doExport,ProjectExportProcessor,DeprecatedProjectExportData);
end b3
start b4
Attribute(NewProjectWizard,myMainFrame,JFrame,N,private);
Class(NewProjectWizard,N,N,public);
Method(NewProjectWizard,NewProjectWizard,N,Y,N,N,public);
Method(NewProjectWizard,createNewProject,PrjInfos,Y,N,N,public);
Parameter(GanttProject,showNewProjectWizard,wizardNewProjectWizard,local);
Parameter(NewProjectWizard,NewProjectWizard,mainFrame,JFrame,declaration);
Parameter(NewProjectWizard,createNewProject,newProjectWizardNewProjectWizardWindow,local);
Parameter(NewProjectWizard,createNewProject,project,IGanttProject,declaration);
Parameter(NewProjectWizard,createNewProject,roleSetsRoleSet[],local);
Relation(GanttProject;showNewProjectWizard;createNewProject,NewProjectWizard,IGanttProject);
Relation(NewProjectWizard;createNewProject;addProjectNamePage,NewProjectWizardWindow,IGanttProject);
Relation(NewProjectWizard;createNewProject;addRoleSetPage,NewProjectWizardWindow,RoleSet[]);
Relation(NewProjectWizard;createNewProject;getRoleManager,IGanttProject,N);
Relation(NewProjectWizard;createNewProject;getRoleSets,RoleManager,N);
Relation(NewProjectWizard;createNewProject;show,WizardImpl,N);
end b4
start b5
Attribute(GanttApplet,button,JButton,N,private);
Attribute(GanttApplet,fileLocation,String,N,private);
Class(GanttApplet,N,N,public);
Generalisation(GanttApplet,JApplet);
Method(GanttApplet,GanttApplet,N,N,N,N,public);
Method(GanttApplet,actionPerformed,void,Y,N,N,public);
Method(GanttApplet,createContainer,Container,N,N,N,private);
Method(GanttApplet,init,void,N,N,N,public);
Method(GanttApplet,main,void,Y,N,static,public);
Parameter(GanttApplet,actionPerformed,e,ActionEvent,declaration);
Parameter(GanttApplet,actionPerformed,ganttFrameGanttProject,local);
Parameter(GanttApplet,actionPerformed,inSInputStream,local);
Parameter(GanttApplet,actionPerformed,urlURL,local);
Parameter(GanttApplet,createContainer,panelJPanel,local);
Parameter(GanttApplet,init,fileLocationParamString,local);
Parameter(GanttApplet,main,appletGanttApplet,local);
Parameter(GanttApplet,main,args,String[],declaration);
Parameter(GanttApplet,main,frameJFrame,local);
Relation(GanttApplet;actionPerformed;getCodeBase,Applet,N);
Relation(GanttApplet;actionPerformed;getInputStream,URLConnection,N);
Relation(GanttApplet;actionPerformed;openConnection,URL,N);
Relation(GanttApplet;actionPerformed;openXMLStream,GanttProject,InputStream-String);
Relation(GanttApplet;actionPerformed;printStackTrace,Throwable,N);
Relation(GanttApplet;actionPerformed;setVisible,Window,boolean);
Relation(GanttApplet;actionPerformed;toString,URL,N);
Relation(GanttApplet;createContainer;add,Container,Component);
Relation(GanttApplet;createContainer;addActionListener,AbstractButton,ActionListener);
Relation(GanttApplet;init;createContainer,GanttApplet,N);
Relation(GanttApplet;init;getParameter,Applet,String);
Relation(GanttApplet;init;setContentPane,JApplet,Container);
Relation(GanttApplet;main;createContainer,GanttApplet,N);
Relation(GanttApplet;main;pack,Window,N);
Relation(GanttApplet;main;setContentPane,JFrame,Container);
Relation(GanttApplet;main;setDefaultCloseOperation,JFrame,int);
Relation(GanttApplet;main;setVisible,Window,boolean);
end b5
start b6
Class(MutableTaskDependencyCollection,N,N,public);
Method(MutableTaskDependencyCollection,clear,void,N,N,N,package);
Method(MutableTaskDependencyCollection,createDependency,TaskDependency,Y,N,N,package);
Method(MutableTaskDependencyCollection,deleteDependency,void,Y,N,N,package);
Parameter(MutableTaskDependencyCollection,createDependency,dependant,Task,declaration);
Parameter(MutableTaskDependencyCollection,createDependency,dependee,Task,declaration);
Parameter(MutableTaskDependencyCollection,deleteDependency,dependency,TaskDependency,declaration);
Relation(DependencyTableModel;createDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTableModel;updateDependency;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(DependencyTagHandler;parsingFinished;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttGraphicArea;GanttGraphicArea;createDependency,MutableTaskDependencyCollection,Task-Task);
Relation(GanttProject;linkRelationships;createDependency,MutableTaskDependencyCollection,Task-Task);
end b6
start b7
Attribute(ResourceAssignmentCollectionImpl,myAssignment,ResourceAssignment,N,private);
Class(ResourceAssignment,N,N,public);
Method(MutableResourceAssignmentCollection,addAssignment,ResourceAssignment,Y,N,N,package);
Method(ResourceAssignment,delete,void,N,N,N,package);
Method(ResourceAssignment,getLoad,float,N,N,N,package);
Method(ResourceAssignment,getResource,ProjectResource,N,N,N,package);
Method(ResourceAssignment,getTask,Task,N,N,N,package);
Method(ResourceAssignment,setLoad,void,Y,N,N,package);
Method(ResourceAssignmentCollection,getAssignment,ResourceAssignment,Y,N,N,package);
Method(ResourceAssignmentCollectionImpl,addAssignment,ResourceAssignment,Y,N,N,public);
Method(ResourceAssignmentCollectionImpl,auxAddAssignment,ResourceAssignment,Y,N,N,private);
Method(ResourceAssignmentCollectionImpl,getAssignment,ResourceAssignment,Y,N,N,public);
Parameter(AllocationTagHandler,loadAllocation,assignmentResourceAssignment,local);
Parameter(GanttXMLSaver,writeAllocations,nextResourceAssignment,local);
Parameter(ResourceAssignment,setLoad,load,float,declaration);
Parameter(ResourceAssignmentCollectionImpl,MutationInfo,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,copyResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,ResourceAssignmentCollectionImpl,nextResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,assignment,ResourceAssignment,declaration);
Parameter(ResourceAssignmentCollectionImpl,addAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,auxAddAssignment,resultResourceAssignment,local);
Parameter(ResourceAssignmentCollectionImpl,commit,resultResourceAssignment,local);
Parameter(ResourceLoadGraphicArea,calculateLoad,nextResourceAssignment,local);
Parameter(ResourcesTableModel,createAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,getValueAt,assignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,newAssignmentResourceAssignment,local);
Parameter(ResourcesTableModel,updateAssignment,updateTargetResourceAssignment,local);
Relation(AllocationTagHandler;loadAllocation;setLoad,ResourceAssignment,float);
Relation(GanttCSVExport;getAssignments;getResource,ResourceAssignment,N);
Relation(GanttGraphicArea;paintResources;getResource,ResourceAssignment,N);
Relation(GanttHTMLExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttPDFExport;writeTasks;getResource,ResourceAssignment,N);
Relation(GanttTree;getToolTip;getResource,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getLoad,ResourceAssignment,N);
Relation(GanttXMLSaver;writeAllocations;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;MutationInfo;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;ResourceAssignmentCollectionImpl;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;addAssignment;getResource,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;auxAddAssignment;addAssignment,ResourceAssignmentCollectionImpl,ResourceAssignment);
Relation(ResourceAssignmentCollectionImpl;commit;getLoad,ResourceAssignment,N);
Relation(ResourceAssignmentCollectionImpl;commit;setLoad,ResourceAssignment,float);
Relation(ResourceAssignmentCollectionImpl;equals;getResource,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getLoad,ResourceAssignment,N);
Relation(ResourceLoadGraphicArea;calculateLoad;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;createAssignment;setLoad,ResourceAssignment,float);
Relation(ResourcesTableModel;getValueAt;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;getValueAt;getResource,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;delete,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;getLoad,ResourceAssignment,N);
Relation(ResourcesTableModel;updateAssignment;setLoad,ResourceAssignment,float);
end b7
start b8
Attribute(GanttChartExportData,myExportSettings,GanttExportSettings,N,package);
Attribute(GanttChartExportData,myImageFormat,String,N,package);
Attribute(GanttChartExportData,myOutputFile,File,N,package);
Class(GanttChartExportData,N,N,public);
Method(GanttChartExportData,GanttChartExportData,N,Y,N,N,public);
Parameter(GanttChartExportData,GanttChartExportData,myExportSettings,GanttExportSettings,declaration);
Parameter(GanttChartExportData,GanttChartExportData,myImageFormat,String,declaration);
Parameter(GanttChartExportData,GanttChartExportData,myOutputFile,File,declaration);
Parameter(GanttChartExportProcessor,run,exportData,GanttChartExportData,declaration);
Parameter(PDFExportProcessor,exportGanttChart,chartExportDataGanttChartExportData,local);
Relation(PDFExportProcessor;exportGanttChart;run,GanttChartExportProcessor,GanttChartExportData);
end b8
start b9
Attribute(GanttProject,myCachedFacade,TaskContainmentHierarchyFacadeImpl,N,private);
Class(TaskContainmentHierarchyFacadeImpl,N,static,private);
end b9
start b10
Attribute(CSVSettingsPanel,appli,GanttProject,N,private);
Attribute(CSVSettingsPanel,bComa,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bDotComa,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bDoubleDot,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bFixedSize,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bOther,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bSeparatedText,JRadioButton,N,package);
Attribute(CSVSettingsPanel,bSpace,JRadioButton,N,package);
Attribute(CSVSettingsPanel,cbEndDate,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResID,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResMail,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResName,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResPhone,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbResRole,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbStartDate,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskDuration,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskID,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskName,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskNotes,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskPercent,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskResources,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTaskWebLink,JCheckBox,N,package);
Attribute(CSVSettingsPanel,cbTextSeparator,JComboBox,N,package);
Attribute(CSVSettingsPanel,tfOther,JTextField,N,package);
Class(CSVSettingsPanel,N,N,public);
Generalisation(CSVSettingsPanel,GeneralOptionPanel);
Method(CSVSettingsPanel,CSVSettingsPanel,N,Y,N,N,public);
Method(CSVSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(CSVSettingsPanel,addUsingGBL,void,Y,N,N,private);
Method(CSVSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(CSVSettingsPanel,enableSeparatedButton,void,Y,N,N,public);
Method(CSVSettingsPanel,getFixed,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceID,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceMail,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceName,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourcePhone,boolean,N,N,N,public);
Method(CSVSettingsPanel,getResourceRole,boolean,N,N,N,public);
Method(CSVSettingsPanel,getSeparat,String,N,N,N,public);
Method(CSVSettingsPanel,getTaskDuration,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskED,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskID,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskName,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskNotes,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskPercent,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskResources,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskSD,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTaskWebLink,boolean,N,N,N,public);
Method(CSVSettingsPanel,getTextSeparat,String,N,N,N,public);
Method(CSVSettingsPanel,initialize,void,N,N,N,public);
Method(CSVSettingsPanel,separatCharHasChange,boolean,N,N,N,public);
Method(CSVSettingsPanel,unselectOther,void,Y,N,N,public);
Parameter(CSVSettingsPanel,CSVSettingsPanel,fixedPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,gbcGridBagConstraints,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,genePanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblResFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblSeparatedFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,lblTaskFieldJLabel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,parent,GanttProject,declaration);
Parameter(CSVSettingsPanel,CSVSettingsPanel,resFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,resPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,separatedPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,separatorFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,taskFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,taskPanelJPanel,local);
Parameter(CSVSettingsPanel,CSVSettingsPanel,textSeparatorFieldPanelJPanel,local);
Parameter(CSVSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(CSVSettingsPanel,actionPerformed,selectedButtonJRadioButton,local);
Parameter(CSVSettingsPanel,addUsingGBL,component,Component,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,container,Container,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,gbc,GridBagConstraints,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,h,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,w,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,x,int,declaration);
Parameter(CSVSettingsPanel,addUsingGBL,y,int,declaration);
Parameter(CSVSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(CSVSettingsPanel,applyChanges,csvOptionsCSVOptions,local);
Parameter(CSVSettingsPanel,enableSeparatedButton,enabled,boolean,declaration);
Parameter(CSVSettingsPanel,initialize,bfixedboolean,local);
Parameter(CSVSettingsPanel,initialize,sSeparatedCharString,local);
Parameter(CSVSettingsPanel,separatCharHasChange,csvOptionsCSVOptions,local);
Parameter(CSVSettingsPanel,unselectOther,selectedButton,JRadioButton,declaration);
Relation(CSVSettingsPanel;CSVSettingsPanel;add,Container,Component);
Relation(CSVSettingsPanel;CSVSettingsPanel;add,Container,Component-Object);
Relation(CSVSettingsPanel;CSVSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(CSVSettingsPanel;CSVSettingsPanel;addUsingGBL,CSVSettingsPanel,Container-Component-GridBagConstraints-int-int-int-int);
Relation(CSVSettingsPanel;CSVSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(CSVSettingsPanel;CSVSettingsPanel;correctLabel,GanttProject,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getFont,Component,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getFontName,Font,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getInstance,GanttLanguage,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getSeparatedTextChars,CSVOptions,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getSize,Font,N);
Relation(CSVSettingsPanel;CSVSettingsPanel;getText,GanttLanguage,String);
Relation(CSVSettingsPanel;CSVSettingsPanel;setFont,JComponent,Font);
Relation(CSVSettingsPanel;actionPerformed;enableSeparatedButton,CSVSettingsPanel,boolean);
Relation(CSVSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(CSVSettingsPanel;actionPerformed;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;actionPerformed;setSelected,AbstractButton,boolean);
Relation(CSVSettingsPanel;actionPerformed;unselectOther,CSVSettingsPanel,JRadioButton);
Relation(CSVSettingsPanel;addUsingGBL;add,Container,Component-Object);
Relation(CSVSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(CSVSettingsPanel;applyChanges;equals,String,Object);
Relation(CSVSettingsPanel;applyChanges;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;applyChanges;getFixed,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;applyChanges;getResourceID,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceMail,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceName,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourcePhone,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getResourceRole,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getSeparat,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskDuration,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskED,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskID,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskName,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskNotes,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskPercent,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskResources,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskSD,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTaskWebLink,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;getTextSeparat,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;applyChanges;separatCharHasChange,CSVSettingsPanel,N);
Relation(CSVSettingsPanel;enableSeparatedButton;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;enableSeparatedButton;setEnabled,AbstractButton,boolean);
Relation(CSVSettingsPanel;enableSeparatedButton;setEnabled,JComponent,boolean);
Relation(CSVSettingsPanel;getFixed;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceID;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceMail;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceName;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourcePhone;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getResourceRole;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getSeparat;getText,JTextComponent,N);
Relation(CSVSettingsPanel;getSeparat;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskDuration;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskED;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskID;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskName;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskNotes;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskPercent;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskResources;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskSD;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTaskWebLink;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;getTextSeparat;getSelectedIndex,JComboBox,N);
Relation(CSVSettingsPanel;initialize;enableSeparatedButton,CSVSettingsPanel,boolean);
Relation(CSVSettingsPanel;initialize;equals,String,Object);
Relation(CSVSettingsPanel;initialize;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;initialize;setSelected,AbstractButton,boolean);
Relation(CSVSettingsPanel;initialize;setSelectedIndex,JComboBox,int);
Relation(CSVSettingsPanel;initialize;setText,JTextComponent,String);
Relation(CSVSettingsPanel;initialize;unselectOther,CSVSettingsPanel,JRadioButton);
Relation(CSVSettingsPanel;separatCharHasChange;equals,String,Object);
Relation(CSVSettingsPanel;separatCharHasChange;getCSVOptions,GanttOptions,N);
Relation(CSVSettingsPanel;separatCharHasChange;getOptions,GanttProject,N);
Relation(CSVSettingsPanel;separatCharHasChange;getText,JTextComponent,N);
Relation(CSVSettingsPanel;separatCharHasChange;isSelected,AbstractButton,N);
Relation(CSVSettingsPanel;unselectOther;setEnabled,JComponent,boolean);
Relation(CSVSettingsPanel;unselectOther;setSelected,AbstractButton,boolean);
end b10
start b11
Attribute(GanttDialogCalendar,panelDate,GanttPanelDate,N,private);
Attribute(GanttDialogDate,panel,GanttPanelDate,N,private);
Attribute(GanttPanelDate,date,GanttCalendar,N,public);
Attribute(GanttPanelDate,ddd,GanttDialogDateDay,N,private);
Attribute(GanttPanelDate,jbNextMonth,JButton,N,private);
Attribute(GanttPanelDate,jbNextYear,JButton,N,private);
Attribute(GanttPanelDate,jbPrevMonth,JButton,N,private);
Attribute(GanttPanelDate,jbPrevYear,JButton,N,private);
Attribute(GanttPanelDate,jtDate,JFormattedTextField,N,private);
Attribute(GanttPanelDate,language,GanttLanguage,N,package);
Attribute(GanttPanelDate,language,GanttLanguage,N,private);
Attribute(GanttPanelDate,save,GanttCalendar,N,private);
Class(GanttPanelDate,N,N,public);
Generalisation(GanttPanelDate,JPanel);
Method(GanttPanelDate,GanttDialogDateDay,N,Y,N,N,public);
Method(GanttPanelDate,GanttPanelDate,N,Y,N,N,public);
Method(GanttPanelDate,actionPerformed,void,Y,N,N,public);
Method(GanttPanelDate,cancel,void,N,N,N,public);
Method(GanttPanelDate,changeDate,void,Y,N,N,private);
Method(GanttPanelDate,clickFunction,void,Y,N,N,public);
Method(GanttPanelDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttPanelDate,getPreferredSize,Dimension,N,N,N,public);
Method(GanttPanelDate,mousePressed,void,Y,N,N,public);
Method(GanttPanelDate,paintComponent,void,Y,N,N,public);
Method(GanttPanelDate,rollDate,void,Y,N,N,private);
Parameter(GanttPanelDate,GanttDialogDateDay,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttDialogDateDay,language,GanttLanguage,declaration);
Parameter(GanttPanelDate,GanttDialogDateDay,mlMouseListener,local);
Parameter(GanttPanelDate,GanttPanelDate,date,GanttCalendar,declaration);
Parameter(GanttPanelDate,GanttPanelDate,hb1Box,local);
Parameter(GanttPanelDate,GanttPanelDate,tmpGregorianCalendar,local);
Parameter(GanttPanelDate,GanttPanelDate,vb1Box,local);
Parameter(GanttPanelDate,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttPanelDate,changeDate,differentMonthboolean,local);
Parameter(GanttPanelDate,changeDate,newDate,GregorianCalendar,declaration);
Parameter(GanttPanelDate,clickFunction,Xint,local);
Parameter(GanttPanelDate,clickFunction,Yint,local);
Parameter(GanttPanelDate,clickFunction,dString,local);
Parameter(GanttPanelDate,clickFunction,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,clickFunction,x,int,declaration);
Parameter(GanttPanelDate,clickFunction,y,int,declaration);
Parameter(GanttPanelDate,mousePressed,e,MouseEvent,declaration);
Parameter(GanttPanelDate,paintComponent,bleuColor,local);
Parameter(GanttPanelDate,paintComponent,dString,local);
Parameter(GanttPanelDate,paintComponent,dayWeekString[],local);
Parameter(GanttPanelDate,paintComponent,dwString,local);
Parameter(GanttPanelDate,paintComponent,g,Graphics,declaration);
Parameter(GanttPanelDate,paintComponent,grisColor,local);
Parameter(GanttPanelDate,paintComponent,sizexint,local);
Parameter(GanttPanelDate,paintComponent,sizeyint,local);
Parameter(GanttPanelDate,paintComponent,timeZoneTimeZone,local);
Parameter(GanttPanelDate,paintComponent,tmpdateGanttCalendar,local);
Parameter(GanttPanelDate,rollDate,amount,int,declaration);
Parameter(GanttPanelDate,rollDate,field,int,declaration);
Relation(GanttDialogDate;GanttDialogDate;cancel,GanttPanelDate,N);
Relation(GanttDialogDate;getDate;getDate,GanttPanelDate,N);
Relation(GanttPanelDate;GanttDialogDateDay;addMouseListener,Component,MouseListener);
Relation(GanttPanelDate;GanttDialogDateDay;clickFunction,GanttDialogDateDay,int-int);
Relation(GanttPanelDate;GanttDialogDateDay;getX,MouseEvent,N);
Relation(GanttPanelDate;GanttDialogDateDay;getY,MouseEvent,N);
Relation(GanttPanelDate;GanttPanelDate;Clone,GanttCalendar,N);
Relation(GanttPanelDate;GanttPanelDate;add,Container,Component);
Relation(GanttPanelDate;GanttPanelDate;add,Container,Component-Object);
Relation(GanttPanelDate;GanttPanelDate;addActionListener,AbstractButton,ActionListener);
Relation(GanttPanelDate;GanttPanelDate;addActionListener,JTextField,ActionListener);
Relation(GanttPanelDate;GanttPanelDate;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;GanttPanelDate;createHorizontalBox,Box,N);
Relation(GanttPanelDate;GanttPanelDate;createVerticalBox,Box,N);
Relation(GanttPanelDate;GanttPanelDate;getClass,Object,N);
Relation(GanttPanelDate;GanttPanelDate;getResource,Class<>,String);
Relation(GanttPanelDate;GanttPanelDate;getText,GanttLanguage,String);
Relation(GanttPanelDate;GanttPanelDate;getTime,Calendar,N);
Relation(GanttPanelDate;GanttPanelDate;getToolTip,GanttProject,String);
Relation(GanttPanelDate;GanttPanelDate;getValue,JFormattedTextField,N);
Relation(GanttPanelDate;GanttPanelDate;rollDate,GanttPanelDate,int-int);
Relation(GanttPanelDate;GanttPanelDate;setEditable,JTextComponent,boolean);
Relation(GanttPanelDate;GanttPanelDate;setTime,Calendar,Date);
Relation(GanttPanelDate;GanttPanelDate;setToolTipText,JComponent,String);
Relation(GanttPanelDate;GanttPanelDate;setValue,JFormattedTextField,Object);
Relation(GanttPanelDate;NgetInstance,GanttLanguage,N);
Relation(GanttPanelDate;cancel;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;changeDate;get,Calendar,int);
Relation(GanttPanelDate;changeDate;getTime,Calendar,N);
Relation(GanttPanelDate;changeDate;repaint,Component,N);
Relation(GanttPanelDate;changeDate;setTime,Calendar,Date);
Relation(GanttPanelDate;changeDate;setValue,JFormattedTextField,Object);
Relation(GanttPanelDate;clickFunction;Clone,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;changeDate,GanttPanelDate,GregorianCalendar);
Relation(GanttPanelDate;clickFunction;equals,String,Object);
Relation(GanttPanelDate;clickFunction;getDay,GanttLanguage,int);
Relation(GanttPanelDate;clickFunction;getWidth,JComponent,N);
Relation(GanttPanelDate;clickFunction;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;clickFunction;go,GanttCalendar,int-int);
Relation(GanttPanelDate;clickFunction;repaint,Component,N);
Relation(GanttPanelDate;clickFunction;setDay,GanttCalendar,int);
Relation(GanttPanelDate;paintComponent;Clone,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;paintComponent;drawString,Graphics,String-int-int);
Relation(GanttPanelDate;paintComponent;equals,String,Object);
Relation(GanttPanelDate;paintComponent;fillRect,Graphics,int-int-int-int);
Relation(GanttPanelDate;paintComponent;getDSTSavings,TimeZone,N);
Relation(GanttPanelDate;paintComponent;getDate,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getDay,GanttLanguage,int);
Relation(GanttPanelDate;paintComponent;getDayWeekLanguage,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getHeight,JComponent,N);
Relation(GanttPanelDate;paintComponent;getMonth,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;getTime,Calendar,N);
Relation(GanttPanelDate;paintComponent;getTimeZone,GregorianCalendar,N);
Relation(GanttPanelDate;paintComponent;getWidth,JComponent,N);
Relation(GanttPanelDate;paintComponent;getdayWeek,GanttCalendar,N);
Relation(GanttPanelDate;paintComponent;go,GanttCalendar,int-int);
Relation(GanttPanelDate;paintComponent;inDaylightTime,TimeZone,Date);
Relation(GanttPanelDate;paintComponent;length,String,N);
Relation(GanttPanelDate;paintComponent;setColor,Graphics,Color);
Relation(GanttPanelDate;paintComponent;setDay,GanttCalendar,int);
Relation(GanttPanelDate;paintComponent;substring,String,int-int);
Relation(GanttPanelDate;rollDate;add,GregorianCalendar,int-int);
Relation(GanttPanelDate;rollDate;getTime,Calendar,N);
Relation(GanttPanelDate;rollDate;repaint,Component,N);
Relation(GanttPanelDate;rollDate;setValue,JFormattedTextField,Object);
end b11
start b12
Attribute(GanttDialogDate,jbNextMonth,JButton,N,private);
Attribute(GanttDialogDate,jbNextYear,JButton,N,private);
Attribute(GanttDialogDate,jbPrevMonth,JButton,N,private);
Attribute(GanttDialogDate,jbPrevYear,JButton,N,private);
Attribute(GanttDialogDate,jtDate,JFormattedTextField,N,private);
Attribute(GanttDialogDate,language,GanttLanguage,N,private);
Attribute(GanttDialogDate,myFixedDate,boolean,N,private);
Attribute(GanttDialogDate,panel,GanttPanelDate,N,private);
Class(GanttDialogDate,N,N,public);
Generalisation(GanttDialogDate,JDialog);
Method(GanttDialogDate,GanttDialogDate,N,Y,N,N,public);
Method(GanttDialogDate,actionPerformed,void,Y,N,N,public);
Method(GanttDialogDate,getDate,GanttCalendar,N,N,N,public);
Method(GanttDialogDate,stateChanged,void,Y,N,N,public);
Parameter(GanttDialogDate,GanttDialogDate,cancelJButton,local);
Parameter(GanttDialogDate,GanttDialogDate,contentPaneJComponent,local);
Parameter(GanttDialogDate,GanttDialogDate,date,GanttCalendar,declaration);
Parameter(GanttDialogDate,GanttDialogDate,fixedDateJCheckBox,local);
Parameter(GanttDialogDate,GanttDialogDate,okJButton,local);
Parameter(GanttDialogDate,GanttDialogDate,pJPanel,local);
Parameter(GanttDialogDate,GanttDialogDate,parent,JDialog,declaration);
Parameter(GanttDialogDate,GanttDialogDate,showFixedDateCheckBox,boolean,declaration);
Parameter(GanttDialogDate,actionPerformed,evt,ActionEvent,declaration);
Parameter(GanttDialogDate,getDate,resultGanttCalendar,local);
Parameter(GanttDialogDate,stateChanged,e,ChangeEvent,declaration);
Parameter(GanttDialogProperties,actionPerformed,ddGanttDialogDate,local);
Relation(GanttDialogDate;GanttDialogDate;add,Container,Component);
Relation(GanttDialogDate;GanttDialogDate;addActionListener,AbstractButton,ActionListener);
Relation(GanttDialogDate;GanttDialogDate;addChangeListener,AbstractButton,ChangeListener);
Relation(GanttDialogDate;GanttDialogDate;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttDialogDate;GanttDialogDate;cancel,GanttPanelDate,N);
Relation(GanttDialogDate;GanttDialogDate;center,DialogAligner,JDialog-Container);
Relation(GanttDialogDate;GanttDialogDate;createVerticalBox,Box,N);
Relation(GanttDialogDate;GanttDialogDate;getComponentOrientation,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getContentPane,JDialog,N);
Relation(GanttDialogDate;GanttDialogDate;getInstance,GanttLanguage,N);
Relation(GanttDialogDate;GanttDialogDate;getParent,Component,N);
Relation(GanttDialogDate;GanttDialogDate;getRootPane,JDialog,N);
Relation(GanttDialogDate;GanttDialogDate;getText,GanttLanguage,String);
Relation(GanttDialogDate;GanttDialogDate;isFixed,GanttCalendar,N);
Relation(GanttDialogDate;GanttDialogDate;isSelected,AbstractButton,N);
Relation(GanttDialogDate;GanttDialogDate;pack,Window,N);
Relation(GanttDialogDate;GanttDialogDate;setDefaultButton,JRootPane,JButton);
Relation(GanttDialogDate;GanttDialogDate;setResizable,Dialog,boolean);
Relation(GanttDialogDate;GanttDialogDate;setSelected,AbstractButton,boolean);
Relation(GanttDialogDate;GanttDialogDate;setVisible,Dialog,boolean);
Relation(GanttDialogDate;NgetInstance,GanttLanguage,N);
Relation(GanttDialogDate;getDate;getDate,GanttPanelDate,N);
Relation(GanttDialogDate;getDate;setFixed,GanttCalendar,boolean);
Relation(GanttDialogProperties;actionPerformed;getDate,GanttDialogDate,N);
end b12
start b13
Attribute(GanttPrintable,image,BufferedImage,N,private);
Attribute(GanttPrintable,x,int,N,private);
Attribute(GanttPrintable,y,int,N,private);
Class(GanttPrintable,N,N,public);
Method(GanttPrintable,GanttPrintable,N,Y,N,N,public);
Method(GanttPrintable,print,int,Y,N,N,public);
Parameter(GanttPrintable,GanttPrintable,image,BufferedImage,declaration);
Parameter(GanttPrintable,print,cptint,local);
Parameter(GanttPrintable,print,g2dGraphics2D,local);
Parameter(GanttPrintable,print,graphics,Graphics,declaration);
Parameter(GanttPrintable,print,heightint,local);
Parameter(GanttPrintable,print,iint,local);
Parameter(GanttPrintable,print,imghint,local);
Parameter(GanttPrintable,print,imgwint,local);
Parameter(GanttPrintable,print,jint,local);
Parameter(GanttPrintable,print,pageFormat,PageFormat,declaration);
Parameter(GanttPrintable,print,pageIndex,int,declaration);
Parameter(GanttPrintable,print,widthint,local);
Relation(GanttPrintable;print;drawImage,Graphics,Image-int-int-ImageObserver);
Relation(GanttPrintable;print;getHeight,BufferedImage,N);
Relation(GanttPrintable;print;getImageableHeight,PageFormat,N);
Relation(GanttPrintable;print;getImageableWidth,PageFormat,N);
Relation(GanttPrintable;print;getImageableX,PageFormat,N);
Relation(GanttPrintable;print;getImageableY,PageFormat,N);
Relation(GanttPrintable;print;getSubimage,BufferedImage,int-int-int-int);
Relation(GanttPrintable;print;getWidth,BufferedImage,N);
Relation(GanttPrintable;print;translate,Graphics2D,double-double);
end b13
start b14
Class(GanttTransferableTreePath,N,static,private);
end b14
start b15
Attribute(HttpDocumentOutputStream,webdavResource,WebdavResource,N,private);
Class(HttpDocumentOutputStream,N,N,package);
Generalisation(HttpDocumentOutputStream,ByteArrayOutputStream);
Method(HttpDocumentOutputStream,HttpDocumentOutputStream,N,Y,N,N,public);
Method(HttpDocumentOutputStream,close,void,N,N,N,public);
Parameter(HttpDocumentOutputStream,HttpDocumentOutputStream,webdavResource,WebdavResource,declaration);
Relation(HttpDocumentOutputStream;close;getMessage,Throwable,N);
Relation(HttpDocumentOutputStream;close;getReasonCode,URIException,N);
Relation(HttpDocumentOutputStream;close;putMethod,WebdavResource,byte[]);
Relation(HttpDocumentOutputStream;close;toByteArray,ByteArrayOutputStream,N);
end b15
start b16
Attribute(Shape,backgroundList,JPaintList,N,protected);
Attribute(Shape,foregroundList,JPaintList,N,protected);
Attribute(Shape,patternList,JPaintList,N,protected);
Class(JPaintList,N,N,public);
Generalisation(JPaintList,JList);
Method(JPaintList,JPaintList,N,Y,N,N,public);
Method(JPaintList,getSelectedPaint,Paint,N,N,N,public);
Parameter(JPaintList,JPaintList,list,Paint[],declaration);
Relation(JPaintList;JPaintList;setCellRenderer,JList,ListCellRenderer);
Relation(JPaintList;JPaintList;setSelectedIndex,JList,int);
Relation(JPaintList;getSelectedPaint;getSelectedValue,JList,N);
Relation(Shape;Shape;getSelectedPaint,JPaintList,N);
Relation(Shape;valueChanged;getSelectedPaint,JPaintList,N);
end b16
start b17
Attribute(GanttCSVExport,peop,GanttResourcePanel,N,private);
Attribute(GanttProject,resp,GanttResourcePanel,N,private);
Attribute(GanttResourcePanel,EMPTY_CONTEXT,ProjectResource[],N,private);
Attribute(GanttResourcePanel,appli,GanttProject,N,package);
Attribute(GanttResourcePanel,area,ResourceLoadGraphicArea,N,public);
Attribute(GanttResourcePanel,colums,ArrayList,N,public);
Attribute(GanttResourcePanel,cx,int,N,package);
Attribute(GanttResourcePanel,cy,int,N,package);
Attribute(GanttResourcePanel,data,ArrayList,N,public);
Attribute(GanttResourcePanel,lang,GanttLanguage,N,package);
Attribute(GanttResourcePanel,left,JPanel,N,package);
Attribute(GanttResourcePanel,model,GanttTableModel,N,package);
Attribute(GanttResourcePanel,myContext,ResourceContext,N,private);
Attribute(GanttResourcePanel,myResourceActionSet,ResourceActionSet,N,private);
Attribute(GanttResourcePanel,nbobj,int,N,package);
Attribute(GanttResourcePanel,scrollpane,JScrollPane,N,package);
Attribute(GanttResourcePanel,table,JTable,N,package);
Attribute(GanttResourcePanel,tree,GanttTree,N,package);
Attribute(GanttResourcePanel,vbar,JScrollBar,N,package);
Attribute(GanttXFIGSaver,peop,GanttResourcePanel,N,private);
Attribute(GanttXMLOpen,peop,GanttResourcePanel,N,package);
Attribute(GanttXMLSaver,peop,GanttResourcePanel,N,private);
Class(GanttResourcePanel,N,N,public);
Generalisation(GanttResourcePanel,AbstractTableModel);
Generalisation(GanttResourcePanel,JPanel);
Method(GanttProject,getResourcePanel,GanttResourcePanel,N,N,N,public);
Method(GanttResourcePanel,GanttResourcePanel,N,Y,N,N,public);
Method(GanttResourcePanel,GanttTableModel,N,Y,N,N,package);
Method(GanttResourcePanel,addHumans,void,Y,N,N,public);
Method(GanttResourcePanel,addRow,void,Y,N,N,public);
Method(GanttResourcePanel,adjustmentValueChanged,void,Y,N,N,public);
Method(GanttResourcePanel,changeLanguage,void,Y,N,N,public);
Method(GanttResourcePanel,changePeople,void,Y,N,N,public);
Method(GanttResourcePanel,createPopupMenu,void,Y,N,N,public);
Method(GanttResourcePanel,deleteHuman,void,Y,N,N,public);
Method(GanttResourcePanel,deleteRow,void,Y,N,N,public);
Method(GanttResourcePanel,deleteRows,void,Y,N,N,public);
Method(GanttResourcePanel,downResource,void,N,N,N,public);
Method(GanttResourcePanel,getColumnCount,int,N,N,N,public);
Method(GanttResourcePanel,getColumnName,String,Y,N,N,public);
Method(GanttResourcePanel,getContext,ResourceContext,N,N,N,public);
Method(GanttResourcePanel,getNameByNumber,String,Y,N,N,public);
Method(GanttResourcePanel,getPeople,ArrayList,N,N,N,public);
Method(GanttResourcePanel,getResources,ProjectResource[],N,N,N,public);
Method(GanttResourcePanel,getRowCount,int,N,N,N,public);
Method(GanttResourcePanel,getUserByNumber,HumanResource,Y,N,N,public);
Method(GanttResourcePanel,getValueAt,Object,Y,N,N,public);
Method(GanttResourcePanel,isCellEditable,boolean,Y,N,N,public);
Method(GanttResourcePanel,mousePressed,void,Y,N,N,public);
Method(GanttResourcePanel,moveDown,boolean,Y,N,N,public);
Method(GanttResourcePanel,moveUp,boolean,Y,N,N,public);
Method(GanttResourcePanel,nbPeople,int,N,N,N,public);
Method(GanttResourcePanel,newHuman,void,Y,N,N,public);
Method(GanttResourcePanel,propertiesHuman,void,Y,N,N,public);
Method(GanttResourcePanel,refresh,void,Y,N,N,public);
Method(GanttResourcePanel,reset,void,N,N,N,public);
Method(GanttResourcePanel,resourceAdded,void,Y,N,N,public);
Method(GanttResourcePanel,resourcesRemoved,void,Y,N,N,public);
Method(GanttResourcePanel,sendMail,void,Y,N,N,public);
Method(GanttResourcePanel,setPeople,void,Y,N,N,public);
Method(GanttResourcePanel,setResourceActions,void,Y,N,N,public);
Method(GanttResourcePanel,setTree,void,Y,N,N,public);
Method(GanttResourcePanel,upResource,void,N,N,N,public);
Method(GanttResourcePanel,updateRow,void,Y,N,N,public);
Parameter(GanttCSVExport,GanttCSVExport,peop,GanttResourcePanel,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,butGanttImagePanel,local);
Parameter(GanttResourcePanel,GanttResourcePanel,mlMouseListener,local);
Parameter(GanttResourcePanel,GanttResourcePanel,pPoint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,prj,GanttProject,declaration);
Parameter(GanttResourcePanel,GanttResourcePanel,selColint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,selRowint,local);
Parameter(GanttResourcePanel,GanttResourcePanel,splitPaneJSplitPane,local);
Parameter(GanttResourcePanel,GanttResourcePanel,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,GanttTableModel,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,addHumans,humans,ArrayList,declaration);
Parameter(GanttResourcePanel,addRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,adjustmentValueChanged,e,AdjustmentEvent,declaration);
Parameter(GanttResourcePanel,changeLanguage,colsString[],local);
Parameter(GanttResourcePanel,changeLanguage,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,changePeople,list,ArrayList,declaration);
Parameter(GanttResourcePanel,createPopupMenu,menuJPopupMenu,local);
Parameter(GanttResourcePanel,createPopupMenu,resourceActionsAbstractAction[],local);
Parameter(GanttResourcePanel,createPopupMenu,x,int,declaration);
Parameter(GanttResourcePanel,createPopupMenu,y,int,declaration);
Parameter(GanttResourcePanel,deleteHuman,gdiGanttDialogInfo,local);
Parameter(GanttResourcePanel,deleteHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,deleteHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,deleteRow,row,int,declaration);
Parameter(GanttResourcePanel,deleteRows,deleted,ProjectResource[],declaration);
Parameter(GanttResourcePanel,deleteRows,deletedSetSet,local);
Parameter(GanttResourcePanel,deleteRows,nextDataObject,local);
Parameter(GanttResourcePanel,deleteRows,rowint,local);
Parameter(GanttResourcePanel,downResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,downResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,getColumnName,col,int,declaration);
Parameter(GanttResourcePanel,getNameByNumber,id,int,declaration);
Parameter(GanttResourcePanel,getNameByNumber,peopleHumanResource,local);
Parameter(GanttResourcePanel,getResources,resultProjectResource[],local);
Parameter(GanttResourcePanel,getUserByNumber,id,int,declaration);
Parameter(GanttResourcePanel,getValueAt,col,int,declaration);
Parameter(GanttResourcePanel,getValueAt,peopleHumanResource,local);
Parameter(GanttResourcePanel,getValueAt,row,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,columnIndex,int,declaration);
Parameter(GanttResourcePanel,isCellEditable,rowIndex,int,declaration);
Parameter(GanttResourcePanel,mousePressed,e,MouseEvent,declaration);
Parameter(GanttResourcePanel,moveDown,objObject,local);
Parameter(GanttResourcePanel,moveDown,row,int,declaration);
Parameter(GanttResourcePanel,moveUp,objObject,local);
Parameter(GanttResourcePanel,moveUp,row,int,declaration);
Parameter(GanttResourcePanel,newHuman,people,HumanResource,declaration);
Parameter(GanttResourcePanel,propertiesHuman,dpGanttDialogPerson,local);
Parameter(GanttResourcePanel,propertiesHuman,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,propertiesHuman,peopleHumanResource,local);
Parameter(GanttResourcePanel,refresh,language,GanttLanguage,declaration);
Parameter(GanttResourcePanel,reset,sizeint,local);
Parameter(GanttResourcePanel,resourceAdded,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,resourcesRemoved,event,ResourceEvent,declaration);
Parameter(GanttResourcePanel,sendMail,parent,GanttProject,declaration);
Parameter(GanttResourcePanel,sendMail,peopleHumanResource,local);
Parameter(GanttResourcePanel,setPeople,list,ArrayList,declaration);
Parameter(GanttResourcePanel,setResourceActions,actionSet,ResourceActionSet,declaration);
Parameter(GanttResourcePanel,setTree,tree,GanttTree,declaration);
Parameter(GanttResourcePanel,upResource,peopleHumanResource,local);
Parameter(GanttResourcePanel,upResource,resManHumanResourceManager,local);
Parameter(GanttResourcePanel,updateRow,people,HumanResource,declaration);
Parameter(GanttResourcePanel,updateRow,row,int,declaration);
Parameter(GanttXFIGSaver,GanttXFIGSaver,peop,GanttResourcePanel,declaration);
Parameter(GanttXMLOpen,GanttXMLOpen,resources,GanttResourcePanel,declaration);
Parameter(GanttXMLSaver,GanttXMLSaver,peop,GanttResourcePanel,declaration);
Relation(GanttCSVExport;beginToSave;getPeople,GanttResourcePanel,N);
Relation(GanttProject;actionPerformed;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;actionPerformed;sendMail,GanttResourcePanel,GanttProject);
Relation(GanttProject;addButtons;getContext,GanttResourcePanel,N);
Relation(GanttProject;addButtons;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttProject;changeLanguage;refresh,GanttResourcePanel,GanttLanguage);
Relation(GanttProject;closeProject;reset,GanttResourcePanel,N);
Relation(GanttProject;downDatas;downResource,GanttResourcePanel,N);
Relation(GanttProject;downDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;downDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;getResourcePanel;setResourceActions,GanttResourcePanel,ResourceActionSet);
Relation(GanttProject;openXMLStream;reset,GanttResourcePanel,N);
Relation(GanttProject;refreshProjectInfos;nbPeople,GanttResourcePanel,N);
Relation(GanttProject;upDatas;getPeople,GanttResourcePanel,N);
Relation(GanttProject;upDatas;setPeople,GanttResourcePanel,ArrayList);
Relation(GanttProject;upDatas;upResource,GanttResourcePanel,N);
Relation(GanttResourcePanel;GanttResourcePanel;add,Container,Component-Object);
Relation(GanttResourcePanel;GanttResourcePanel;addAdjustmentListener,JScrollBar,AdjustmentListener);
Relation(GanttResourcePanel;GanttResourcePanel;addMouseListener,Component,MouseListener);
Relation(GanttResourcePanel;GanttResourcePanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttResourcePanel;GanttResourcePanel;columnAtPoint,JTable,Point);
Relation(GanttResourcePanel;GanttResourcePanel;createPopupMenu,GanttResourcePanel,int-int);
Relation(GanttResourcePanel;GanttResourcePanel;getButton,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getClickCount,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;GanttResourcePanel;getDefaultToolkit,Toolkit,N);
Relation(GanttResourcePanel;GanttResourcePanel;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;GanttResourcePanel;getPreferredSize,JComponent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getScreenSize,Toolkit,N);
Relation(GanttResourcePanel;GanttResourcePanel;getVerticalScrollBar,JScrollPane,N);
Relation(GanttResourcePanel;GanttResourcePanel;getViewport,JScrollPane,N);
Relation(GanttResourcePanel;GanttResourcePanel;getWidth,Dimension,N);
Relation(GanttResourcePanel;GanttResourcePanel;getX,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;getY,MouseEvent,N);
Relation(GanttResourcePanel;GanttResourcePanel;propertiesHuman,GanttResourcePanel,GanttProject);
Relation(GanttResourcePanel;GanttResourcePanel;rowAtPoint,JTable,Point);
Relation(GanttResourcePanel;GanttResourcePanel;setBackground,JComponent,Color);
Relation(GanttResourcePanel;GanttResourcePanel;setDividerLocation,JSplitPane,int);
Relation(GanttResourcePanel;GanttResourcePanel;setLayout,Container,LayoutManager);
Relation(GanttResourcePanel;GanttResourcePanel;setLeftComponent,JSplitPane,Component);
Relation(GanttResourcePanel;GanttResourcePanel;setOneTouchExpandable,JSplitPane,boolean);
Relation(GanttResourcePanel;GanttResourcePanel;setPreferredSize,JComponent,Dimension);
Relation(GanttResourcePanel;GanttResourcePanel;setRightComponent,JSplitPane,Component);
Relation(GanttResourcePanel;GanttResourcePanel;setRowHeight,JTable,int);
Relation(GanttResourcePanel;GanttResourcePanel;setSelectionMode,JTable,int);
Relation(GanttResourcePanel;GanttTableModel;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;addHumans;get,ArrayList,int);
Relation(GanttResourcePanel;addHumans;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;addHumans;size,ArrayList,N);
Relation(GanttResourcePanel;addRow;add,ArrayList,Object);
Relation(GanttResourcePanel;addRow;fireTableRowsInserted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;addRow;size,ArrayList,N);
Relation(GanttResourcePanel;adjustmentValueChanged;getValue,AdjustmentEvent,N);
Relation(GanttResourcePanel;adjustmentValueChanged;repaint,Component,N);
Relation(GanttResourcePanel;adjustmentValueChanged;setScrollBar,ResourceLoadGraphicArea,int);
Relation(GanttResourcePanel;changeLanguage;add,ArrayList,Object);
Relation(GanttResourcePanel;changeLanguage;clear,ArrayList,N);
Relation(GanttResourcePanel;changeLanguage;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(GanttResourcePanel;changeLanguage;fireTableStructureChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;changeLanguage;getText,GanttLanguage,String);
Relation(GanttResourcePanel;changeLanguage;size,ArrayList,N);
Relation(GanttResourcePanel;changePeople;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;createPopupMenu;add,JPopupMenu,JMenuItem);
Relation(GanttResourcePanel;createPopupMenu;addSeparator,JPopupMenu,N);
Relation(GanttResourcePanel;createPopupMenu;applyComponentOrientation,Container,ComponentOrientation);
Relation(GanttResourcePanel;createPopupMenu;correctLabel,GanttProject,String);
Relation(GanttResourcePanel;createPopupMenu;createNewItem,GanttProject,String-String);
Relation(GanttResourcePanel;createPopupMenu;getActions,ResourceActionSet,N);
Relation(GanttResourcePanel;createPopupMenu;getComponentOrientation,GanttLanguage,N);
Relation(GanttResourcePanel;createPopupMenu;getText,GanttLanguage,String);
Relation(GanttResourcePanel;createPopupMenu;getValue,JScrollBar,N);
Relation(GanttResourcePanel;createPopupMenu;show,JPopupMenu,Component-int-int);
Relation(GanttResourcePanel;deleteHuman;deleteRow,GanttTableModel,int);
Relation(GanttResourcePanel;deleteHuman;get,ArrayList,int);
Relation(GanttResourcePanel;deleteHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;deleteHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;deleteHuman;show,Dialog,N);
Relation(GanttResourcePanel;deleteHuman;size,ArrayList,N);
Relation(GanttResourcePanel;deleteHuman;toString,ProjectResource,N);
Relation(GanttResourcePanel;deleteRow;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;deleteRow;remove,ArrayList,int);
Relation(GanttResourcePanel;deleteRows;asList,Arrays,ProjectResource[]);
Relation(GanttResourcePanel;deleteRows;contains,Set,Object);
Relation(GanttResourcePanel;deleteRows;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;deleteRows;hasNext,Iterator,N);
Relation(GanttResourcePanel;deleteRows;iterator,ArrayList,N);
Relation(GanttResourcePanel;deleteRows;next,Iterator,N);
Relation(GanttResourcePanel;deleteRows;remove,Iterator,N);
Relation(GanttResourcePanel;downResource;changeSelection,JTable,int-int-boolean-boolean);
Relation(GanttResourcePanel;downResource;down,HumanResourceManager,int);
Relation(GanttResourcePanel;downResource;get,ArrayList,int);
Relation(GanttResourcePanel;downResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;downResource;moveDown,GanttTableModel,int);
Relation(GanttResourcePanel;downResource;println,PrintStream,String);
Relation(GanttResourcePanel;downResource;size,ArrayList,N);
Relation(GanttResourcePanel;getColumnCount;size,ArrayList,N);
Relation(GanttResourcePanel;getColumnName;get,ArrayList,int);
Relation(GanttResourcePanel;getNameByNumber;get,ArrayList,int);
Relation(GanttResourcePanel;getNameByNumber;getName,ProjectResource,N);
Relation(GanttResourcePanel;getResources;get,ArrayList,int);
Relation(GanttResourcePanel;getResources;size,ArrayList,N);
Relation(GanttResourcePanel;getRowCount;size,ArrayList,N);
Relation(GanttResourcePanel;getUserByNumber;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;get,ArrayList,int);
Relation(GanttResourcePanel;getValueAt;getMail,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getName,ProjectResource,N);
Relation(GanttResourcePanel;getValueAt;getName,Role,N);
Relation(GanttResourcePanel;getValueAt;getPhone,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;getRole,HumanResource,N);
Relation(GanttResourcePanel;getValueAt;size,ArrayList,N);
Relation(GanttResourcePanel;moveDown;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveDown;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveDown;remove,ArrayList,int);
Relation(GanttResourcePanel;moveDown;size,ArrayList,N);
Relation(GanttResourcePanel;moveUp;add,ArrayList,int-Object);
Relation(GanttResourcePanel;moveUp;fireTableDataChanged,AbstractTableModel,N);
Relation(GanttResourcePanel;moveUp;remove,ArrayList,int);
Relation(GanttResourcePanel;nbPeople;size,ArrayList,N);
Relation(GanttResourcePanel;newHuman;addRow,GanttTableModel,HumanResource);
Relation(GanttResourcePanel;propertiesHuman;get,ArrayList,int);
Relation(GanttResourcePanel;propertiesHuman;getInstance,GanttLanguage,N);
Relation(GanttResourcePanel;propertiesHuman;getStatusBar,GanttProject,N);
Relation(GanttResourcePanel;propertiesHuman;getText,GanttLanguage,String);
Relation(GanttResourcePanel;propertiesHuman;result,GanttDialogPerson,N);
Relation(GanttResourcePanel;propertiesHuman;setAskForSave,GanttProject,boolean);
Relation(GanttResourcePanel;propertiesHuman;setFirstText,GanttStatusBar,String-int);
Relation(GanttResourcePanel;propertiesHuman;show,Dialog,N);
Relation(GanttResourcePanel;propertiesHuman;size,ArrayList,N);
Relation(GanttResourcePanel;propertiesHuman;updateRow,GanttTableModel,int-HumanResource);
Relation(GanttResourcePanel;refresh;changeLanguage,GanttTableModel,GanttLanguage);
Relation(GanttResourcePanel;reset;clear,ArrayList,N);
Relation(GanttResourcePanel;reset;fireTableRowsDeleted,AbstractTableModel,int-int);
Relation(GanttResourcePanel;reset;reset,GanttTableModel,N);
Relation(GanttResourcePanel;reset;size,ArrayList,N);
Relation(GanttResourcePanel;resourceAdded;getResource,ResourceEvent,N);
Relation(GanttResourcePanel;resourceAdded;newHuman,GanttResourcePanel,HumanResource);
Relation(GanttResourcePanel;resourcesRemoved;deleteRows,GanttTableModel,ProjectResource[]);
Relation(GanttResourcePanel;resourcesRemoved;getResources,ResourceEvent,N);
Relation(GanttResourcePanel;sendMail;displayURL,BrowserControl,String);
Relation(GanttResourcePanel;sendMail;get,ArrayList,int);
Relation(GanttResourcePanel;sendMail;getMail,HumanResource,N);
Relation(GanttResourcePanel;sendMail;println,PrintStream,Object);
Relation(GanttResourcePanel;sendMail;size,ArrayList,N);
Relation(GanttResourcePanel;setPeople;changePeople,GanttTableModel,ArrayList);
Relation(GanttResourcePanel;upResource;changeSelection,JTable,int-int-boolean-boolean);
Relation(GanttResourcePanel;upResource;get,ArrayList,int);
Relation(GanttResourcePanel;upResource;getHumanResourceManager,GanttProject,N);
Relation(GanttResourcePanel;upResource;moveUp,GanttTableModel,int);
Relation(GanttResourcePanel;upResource;println,PrintStream,String);
Relation(GanttResourcePanel;upResource;size,ArrayList,N);
Relation(GanttResourcePanel;upResource;up,HumanResourceManager,int);
Relation(GanttResourcePanel;updateRow;fireTableRowsUpdated,AbstractTableModel,int-int);
Relation(GanttResourcePanel;updateRow;set,ArrayList,int-Object);
Relation(GanttXMLSaver;writeResources;getPeople,GanttResourcePanel,N);
end b17
start b18
Class(AbstractDocument,abstract,N,public);
Generalisation(AbstractURLDocument,AbstractDocument);
Generalisation(FileDocument,AbstractDocument);
Method(AbstractDocument,acquireLock,boolean,N,N,N,public);
Method(AbstractDocument,equals,boolean,Y,N,N,public);
Method(AbstractDocument,getFilePath,String,N,N,N,public);
Method(AbstractDocument,getLastError,String,N,N,N,public);
Method(AbstractDocument,getPassword,String,N,N,N,public);
Method(AbstractDocument,getURLPath,String,N,N,N,public);
Method(AbstractDocument,getUsername,String,N,N,N,public);
Method(AbstractDocument,releaseLock,void,N,N,N,public);
Method(AbstractDocument,setUserInfo,void,Y,N,N,public);
Parameter(AbstractDocument,equals,o,Object,declaration);
Parameter(AbstractDocument,setUserInfo,pass,String,declaration);
Parameter(AbstractDocument,setUserInfo,user,String,declaration);
Relation(AbstractDocument;equals;equals,String,Object);
Relation(AbstractDocument;equals;getPath,Document,N);
end b18
start b19
Attribute(HTMLSettingsPanel,appli,GanttProject,N,private);
Attribute(HTMLSettingsPanel,buttonXsl,JButton,N,package);
Attribute(HTMLSettingsPanel,cbDefault,JCheckBox,N,package);
Attribute(HTMLSettingsPanel,tfXsl,JTextField,N,package);
Class(HTMLSettingsPanel,N,N,public);
Generalisation(HTMLSettingsPanel,GeneralOptionPanel);
Method(HTMLSettingsPanel,HTMLSettingsPanel,N,Y,N,N,public);
Method(HTMLSettingsPanel,actionPerformed,void,Y,N,N,public);
Method(HTMLSettingsPanel,applyChanges,boolean,Y,N,N,public);
Method(HTMLSettingsPanel,getXslDirectory,String,Y,N,N,public);
Method(HTMLSettingsPanel,initialize,void,N,N,N,public);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,defaultPanelJPanel,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,fcJFileChooser,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,htmlThemeJPanel,local);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,parent,GanttProject,declaration);
Parameter(HTMLSettingsPanel,HTMLSettingsPanel,returnValint,local);
Parameter(HTMLSettingsPanel,actionPerformed,e,ActionEvent,declaration);
Parameter(HTMLSettingsPanel,applyChanges,askForApply,boolean,declaration);
Parameter(HTMLSettingsPanel,getXslDirectory,useDefault,boolean,declaration);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;add,Container,Component);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;add,Container,Component-Object);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;addActionListener,AbstractButton,ActionListener);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;applyComponentOrientation,Container,ComponentOrientation);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;correctLabel,GanttProject,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getClass,Object,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getComponentOrientation,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getInstance,GanttLanguage,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getResource,Class<>,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getSelectedFile,JFileChooser,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getText,GanttLanguage,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;getText,JTextComponent,N);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setApproveButtonToolTipText,JFileChooser,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setColumns,JTextField,int);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setDialogTitle,JFileChooser,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setEditable,JTextComponent,boolean);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setFileSelectionMode,JFileChooser,int);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;setText,JTextComponent,String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;showDialog,JFileChooser,Component-String);
Relation(HTMLSettingsPanel;HTMLSettingsPanel;toString,File,N);
Relation(HTMLSettingsPanel;actionPerformed;getSource,EventObject,N);
Relation(HTMLSettingsPanel;applyChanges;askForApplyChanges,GeneralOptionPanel,N);
Relation(HTMLSettingsPanel;applyChanges;getOptions,GanttProject,N);
Relation(HTMLSettingsPanel;applyChanges;getXslDirectory,HTMLSettingsPanel,boolean);
Relation(HTMLSettingsPanel;applyChanges;isSelected,AbstractButton,N);
Relation(HTMLSettingsPanel;applyChanges;setXslDir,GanttOptions,String);
Relation(HTMLSettingsPanel;getXslDirectory;exists,File,N);
Relation(HTMLSettingsPanel;getXslDirectory;getResource,Class<HTMLSettingsPanel>,String);
Relation(HTMLSettingsPanel;getXslDirectory;getText,JTextComponent,N);
Relation(HTMLSettingsPanel;getXslDirectory;length,String,N);
Relation(HTMLSettingsPanel;getXslDirectory;toString,URL,N);
Relation(HTMLSettingsPanel;initialize;getMessage,Throwable,N);
Relation(HTMLSettingsPanel;initialize;getOptions,GanttProject,N);
Relation(HTMLSettingsPanel;initialize;getProperty,System,String);
Relation(HTMLSettingsPanel;initialize;getXslDir,GanttOptions,N);
Relation(HTMLSettingsPanel;initialize;println,PrintStream,String);
Relation(HTMLSettingsPanel;initialize;setText,JTextComponent,String);
end b19
start b20
Class(GraphicPrimitive,N,static,package);
Generalisation(GraphicPrimitiveContainer,GraphicPrimitive);
Relation(ChartHeaderImpl;createFrames;setForegroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setBackgroundColor,GraphicPrimitive,Color);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;setForegroundColor,GraphicPrimitive,Color);
Relation(GraphicPrimitiveContainer;paint;getBackgroundColor,GraphicPrimitive,N);
Relation(GraphicPrimitiveContainer;paint;getForegroundColor,GraphicPrimitive,N);
end b20
start b21
Class(MouseOverHandler,N,N,package);
end b21
start b22
Attribute(DependencyTagHandler,myContext,ParsingContext,N,private);
Attribute(GanttXMLOpen,myContext,ParsingContext,N,private);
Attribute(ParsingContext,myTaskID,int,N,private);
Attribute(TaskTagHandler,myContext,ParsingContext,N,private);
Class(ParsingContext,N,N,public);
Method(DependencyTagHandler,getContext,ParsingContext,N,N,N,private);
Method(GanttXMLOpen,getContext,ParsingContext,N,N,N,public);
Method(ParsingContext,getTaskID,int,N,N,N,public);
Method(ParsingContext,setTaskID,void,Y,N,N,public);
Parameter(DependencyTagHandler,DependencyTagHandler,context,ParsingContext,declaration);
Parameter(ParsingContext,setTaskID,id,int,declaration);
Parameter(TaskTagHandler,TaskTagHandler,context,ParsingContext,declaration);
Relation(DependencyTagHandler;getDependencyAddressee;getTaskID,ParsingContext,N);
Relation(GanttXMLOpen;startElement;getTaskID,ParsingContext,N);
Relation(GanttXMLOpen;startElement;setTaskID,ParsingContext,int);
Relation(TaskTagHandler;loadTask;setTaskID,ParsingContext,int);
end b22
start b23
Attribute(GanttStatusBar,pbp,ProgressBarPanel,N,protected);
Class(ProgressBarPanel,N,N,private);
Relation(GanttStatusBar;GanttStatusBar;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;run;setValue,ProgressBarPanel,int);
Relation(GanttStatusBar;setProgressValue;setValue,ProgressBarPanel,int);
end b23
start b24
Attribute(DeleteHumanAction,ICON_URL,String,static,private);
Attribute(DeleteHumanAction,MENU_MASK,int,N,private);
Attribute(DeleteHumanAction,myContext,ResourceContext,N,private);
Attribute(DeleteHumanAction,myProjectFrame,GanttProject,N,private);
Class(DeleteHumanAction,N,N,public);
Generalisation(DeleteHumanAction,ResourceAction);
Method(DeleteHumanAction,DeleteHumanAction,N,Y,N,N,public);
Method(DeleteHumanAction,actionPerformed,void,Y,N,N,public);
Method(DeleteHumanAction,deleteResources,void,Y,N,N,private);
Method(DeleteHumanAction,getContext,ResourceContext,N,N,N,private);
Method(DeleteHumanAction,getDisplayName,String,Y,N,N,private);
Method(DeleteHumanAction,getProjectFrame,GanttProject,N,N,N,private);
Parameter(DeleteHumanAction,DeleteHumanAction,context,ResourceContext,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,hrManager,ResourceManager,declaration);
Parameter(DeleteHumanAction,DeleteHumanAction,iconUrlURL,local);
Parameter(DeleteHumanAction,DeleteHumanAction,projectFrame,GanttProject,declaration);
Parameter(DeleteHumanAction,actionPerformed,contextProjectResource[],local);
Parameter(DeleteHumanAction,actionPerformed,event,ActionEvent,declaration);
Parameter(DeleteHumanAction,actionPerformed,gdiGanttDialogInfo,local);
Parameter(DeleteHumanAction,deleteResources,context,ProjectResource[],declaration);
Parameter(DeleteHumanAction,getDisplayName,resources,ProjectResource[],declaration);
Parameter(DeleteHumanAction,getDisplayName,resultStringBuffer,local);
Relation(DeleteHumanAction;DeleteHumanAction;correctLabel,GanttProject,String);
Relation(DeleteHumanAction;DeleteHumanAction;getClass,Object,N);
Relation(DeleteHumanAction;DeleteHumanAction;getClassLoader,Class<>,N);
Relation(DeleteHumanAction;DeleteHumanAction;getKeyStroke,KeyStroke,int-int);
Relation(DeleteHumanAction;DeleteHumanAction;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;DeleteHumanAction;getResource,ClassLoader,String);
Relation(DeleteHumanAction;DeleteHumanAction;getText,GanttLanguage,String);
Relation(DeleteHumanAction;DeleteHumanAction;putValue,AbstractAction,String-Object);
Relation(DeleteHumanAction;NgetDefaultToolkit,Toolkit,N);
Relation(DeleteHumanAction;NgetMenuShortcutKeyMask,Toolkit,N);
Relation(DeleteHumanAction;actionPerformed;deleteResources,DeleteHumanAction,ProjectResource[]);
Relation(DeleteHumanAction;actionPerformed;getContext,DeleteHumanAction,N);
Relation(DeleteHumanAction;actionPerformed;getDisplayName,DeleteHumanAction,ProjectResource[]);
Relation(DeleteHumanAction;actionPerformed;getLanguage,ResourceAction,N);
Relation(DeleteHumanAction;actionPerformed;getProjectFrame,DeleteHumanAction,N);
Relation(DeleteHumanAction;actionPerformed;getResources,ResourceContext,N);
Relation(DeleteHumanAction;actionPerformed;getText,GanttLanguage,String);
Relation(DeleteHumanAction;actionPerformed;refreshProjectInfos,GanttProject,N);
Relation(DeleteHumanAction;actionPerformed;setAskForSave,GanttProject,boolean);
Relation(DeleteHumanAction;actionPerformed;setSelectedIndex,JTabbedPane,int);
Relation(DeleteHumanAction;actionPerformed;show,Dialog,N);
Relation(DeleteHumanAction;deleteResources;getManager,ResourceAction,N);
Relation(DeleteHumanAction;deleteResources;remove,ResourceManager,ProjectResource);
Relation(DeleteHumanAction;getDisplayName;append,StringBuffer,String);
Relation(DeleteHumanAction;getDisplayName;toString,ProjectResource,N);
Relation(DeleteHumanAction;getDisplayName;toString,StringBuffer,N);
end b24
start b25
Class(ResourceView,N,N,public);
Method(ResourceView,resourceAdded,void,Y,N,N,public);
Method(ResourceView,resourcesRemoved,void,Y,N,N,public);
Parameter(HumanResourceManager,addView,view,ResourceView,declaration);
Parameter(HumanResourceManager,fireResourceAdded,nextViewResourceView,local);
Parameter(HumanResourceManager,fireResourcesRemoved,nextViewResourceView,local);
Parameter(ResourceManager,addView,view,ResourceView,declaration);
Parameter(ResourceView,resourceAdded,event,ResourceEvent,declaration);
Parameter(ResourceView,resourcesRemoved,event,ResourceEvent,declaration);
Relation(GanttProject;getHumanResourceManager;addView,ResourceManager,ResourceView);
Relation(HumanResourceManager;fireResourceAdded;resourceAdded,ResourceView,ResourceEvent);
Relation(HumanResourceManager;fireResourcesRemoved;resourcesRemoved,ResourceView,ResourceEvent);
end b25
start b26
Attribute(TaskImpl,myManager,TaskManagerImpl,N,private);
Attribute(TaskManagerImpl,myAlgorithmCollection,AlgorithmCollection,N,private);
Attribute(TaskManagerImpl,myConfig,TaskManagerConfig,N,private);
Attribute(TaskManagerImpl,myDependencyCollection,TaskDependencyCollectionImpl,N,private);
Attribute(TaskManagerImpl,myHierarchyManager,TaskHierarchyManagerImpl,N,private);
Attribute(TaskManagerImpl,myId2task,Map,N,private);
Attribute(TaskManagerImpl,myListeners,List,N,private);
Attribute(TaskManagerImpl,myMaxID,int,N,private);
Attribute(TaskManagerImpl,myRoot,Task,N,private);
Attribute(TaskManagerImpl,myTimeUnitManager,TimeUnitManager,N,private);
Class(TaskManagerImpl,N,N,public);
Method(TaskManagerImpl,FacadeImpl,N,Y,N,N,public);
Method(TaskManagerImpl,TaskManagerImpl,N,N,N,N,package);
Method(TaskManagerImpl,TaskManagerImpl,N,Y,N,N,package);
Method(TaskManagerImpl,addTaskListener,void,Y,N,N,public);
Method(TaskManagerImpl,clear,void,N,N,N,public);
Method(TaskManagerImpl,createConstraint,TaskDependencyConstraint,Y,N,N,public);
Method(TaskManagerImpl,createContainmentFacade,TaskContainmentHierarchyFacade,N,N,N,protected);
Method(TaskManagerImpl,createFacede,TaskContainmentHierarchyFacade,N,N,N,public);
Method(TaskManagerImpl,createLength,TaskLength,Y,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,N,N,N,public);
Method(TaskManagerImpl,createTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,fireDependencyAdded,void,Y,N,N,private);
Method(TaskManagerImpl,fireDependencyAdded,void,Y,N,N,public);
Method(TaskManagerImpl,fireDependencyRemoved,void,Y,N,N,private);
Method(TaskManagerImpl,fireDependencyRemoved,void,Y,N,N,public);
Method(TaskManagerImpl,fireTaskAdded,void,Y,N,N,private);
Method(TaskManagerImpl,fireTaskRemoved,void,Y,N,N,private);
Method(TaskManagerImpl,fireTaskScheduleChanged,void,Y,N,N,package);
Method(TaskManagerImpl,getAlgorithmCollection,AlgorithmCollection,N,N,N,public);
Method(TaskManagerImpl,getConfig,TaskManagerConfig,N,N,N,public);
Method(TaskManagerImpl,getContainer,Task,Y,N,N,public);
Method(TaskManagerImpl,getDefaultColor,Color,N,N,N,public);
Method(TaskManagerImpl,getDependencyCollection,TaskDependencyCollection,N,N,N,public);
Method(TaskManagerImpl,getHierarchyManager,TaskHierarchyManagerImpl,N,N,N,public);
Method(TaskManagerImpl,getMaxID,int,N,N,N,public);
Method(TaskManagerImpl,getNestedTasks,Task[],Y,N,N,public);
Method(TaskManagerImpl,getRoot,Task,N,N,N,public);
Method(TaskManagerImpl,getRootTask,Task,N,N,N,public);
Method(TaskManagerImpl,getTask,GanttTask,Y,N,N,public);
Method(TaskManagerImpl,getTimeUnitManager,TimeUnitManager,N,N,N,public);
Method(TaskManagerImpl,increaseMaxID,void,N,N,N,package);
Method(TaskManagerImpl,registerTask,void,Y,N,N,public);
Method(TaskManagerImpl,setMaxID,void,Y,N,N,private);
Method(TaskManagerImpl,setTask,void,Y,N,N,public);
Parameter(GanttTree,insertClonedNode,tmiTaskManagerImpl,local);
Parameter(TaskManagerImpl,FacadeImpl,root,Task,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,alg1FindPossibleDependeesAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg2RecalculateTaskScheduleAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg3AdjustTaskBoundsAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,alg4RecalculateTaskCompletionPercentageAlgorithm,local);
Parameter(TaskManagerImpl,TaskManagerImpl,config,TaskManagerConfig,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,containmentFacadeFactory,Factory,declaration);
Parameter(TaskManagerImpl,TaskManagerImpl,factoryFactory,local);
Parameter(TaskManagerImpl,addTaskListener,listener,TaskListener,declaration);
Parameter(TaskManagerImpl,createConstraint,constraintID,int,declaration);
Parameter(TaskManagerImpl,createConstraint,resultTaskDependencyConstraint,local);
Parameter(TaskManagerImpl,createLength,count,long,declaration);
Parameter(TaskManagerImpl,createLength,unit,TimeUnit,declaration);
Parameter(TaskManagerImpl,createTask,resultGanttTask,local);
Parameter(TaskManagerImpl,createTask,taskId,int,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,dep,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,eTaskDependencyEvent,local);
Parameter(TaskManagerImpl,fireDependencyAdded,newDependency,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,dep,TaskDependency,declaration);
Parameter(TaskManagerImpl,fireDependencyRemoved,eTaskDependencyEvent,local);
Parameter(TaskManagerImpl,fireDependencyRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskAdded,eTaskHierarchyEvent,local);
Parameter(TaskManagerImpl,fireTaskAdded,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskAdded,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,eTaskHierarchyEvent,local);
Parameter(TaskManagerImpl,fireTaskRemoved,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskRemoved,oldSupertask,Task,declaration);
Parameter(TaskManagerImpl,fireTaskRemoved,task,Task,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,changedTask,Task,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,eTaskScheduleEvent,local);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,nextTaskListener,local);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldFinishDate,GanttCalendar,declaration);
Parameter(TaskManagerImpl,fireTaskScheduleChanged,oldStartDate,GanttCalendar,declaration);
Parameter(TaskManagerImpl,getContainer,nestedTask,Task,declaration);
Parameter(TaskManagerImpl,getNestedTasks,container,Task,declaration);
Parameter(TaskManagerImpl,getRootTask,todayDate,local);
Parameter(TaskManagerImpl,getTask,taskId,int,declaration);
Parameter(TaskManagerImpl,registerTask,task,Task,declaration);
Parameter(TaskManagerImpl,registerTask,taskIDint,local);
Parameter(TaskManagerImpl,setMaxID,id,int,declaration);
Parameter(TaskManagerImpl,setTask,task,Task,declaration);
Parameter(TaskManagerImpl,setTask,taskIDint,local);
Relation(GanttTree;insertClonedNode;getMaxID,TaskManagerImpl,N);
Relation(GanttXMLOpen;GanttXMLOpen;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getHierarchyManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getMaxID,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskImpl;TaskImpl;increaseMaxID,TaskManagerImpl,N);
Relation(TaskImpl;getColor;getConfig,TaskManagerImpl,N);
Relation(TaskImpl;setDuration;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setEnd;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskImpl;setStart;fireTaskScheduleChanged,TaskManagerImpl,Task-GanttCalendar-GanttCalendar);
Relation(TaskManagerImpl;TaskManagerImpl;clear,TaskManagerImpl,N);
Relation(TaskManagerImpl;TaskManagerImpl;createFacede,Factory,N);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyAdded,TaskManagerImpl,TaskDependency);
Relation(TaskManagerImpl;TaskManagerImpl;fireDependencyRemoved,TaskManagerImpl,TaskDependency);
Relation(TaskManagerImpl;addTaskListener;add,List,Object);
Relation(TaskManagerImpl;clear;clear,Map,N);
Relation(TaskManagerImpl;clear;clear,TaskDependencyCollectionImpl,N);
Relation(TaskManagerImpl;clear;setMaxID,TaskManagerImpl,int);
Relation(TaskManagerImpl;createTask;createTask,TaskManagerImpl,int);
Relation(TaskManagerImpl;createTask;fireTaskAdded,TaskManagerImpl,Task);
Relation(TaskManagerImpl;createTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;getRootTask,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;getTaskID,TaskImpl,N);
Relation(TaskManagerImpl;createTask;increaseMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;createTask;move,TaskImpl,Task);
Relation(TaskManagerImpl;createTask;setTaskID,GanttTask,int);
Relation(TaskManagerImpl;fireDependencyAdded;dependencyAdded,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyAdded;get,List,int);
Relation(TaskManagerImpl;fireDependencyAdded;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskManagerImpl;fireDependencyAdded;size,List,N);
Relation(TaskManagerImpl;fireDependencyRemoved;dependencyRemoved,TaskListener,TaskDependencyEvent);
Relation(TaskManagerImpl;fireDependencyRemoved;get,List,int);
Relation(TaskManagerImpl;fireDependencyRemoved;getDependencyCollection,TaskManagerImpl,N);
Relation(TaskManagerImpl;fireDependencyRemoved;size,List,N);
Relation(TaskManagerImpl;fireTaskAdded;get,List,int);
Relation(TaskManagerImpl;fireTaskAdded;getSupertask,Task,N);
Relation(TaskManagerImpl;fireTaskAdded;size,List,N);
Relation(TaskManagerImpl;fireTaskAdded;taskAdded,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskRemoved;get,List,int);
Relation(TaskManagerImpl;fireTaskRemoved;size,List,N);
Relation(TaskManagerImpl;fireTaskRemoved;taskRemoved,TaskListener,TaskHierarchyEvent);
Relation(TaskManagerImpl;fireTaskScheduleChanged;get,List,int);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getEnd,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;getStart,Task,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;size,List,N);
Relation(TaskManagerImpl;fireTaskScheduleChanged;taskScheduleChanged,TaskListener,TaskScheduleEvent);
Relation(TaskManagerImpl;getContainer;getSupertask,Task,N);
Relation(TaskManagerImpl;getNestedTasks;getNestedTasks,Task,N);
Relation(TaskManagerImpl;getRootTask;createLength,TaskManagerImpl,TimeUnit-long);
Relation(TaskManagerImpl;getRootTask;getInstance,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTime,Calendar,N);
Relation(TaskManagerImpl;getRootTask;getTimeUnit,TimeUnitManager,int);
Relation(TaskManagerImpl;getRootTask;getTimeUnitManager,TaskManagerImpl,N);
Relation(TaskManagerImpl;getRootTask;setDuration,MutableTask,TaskLength);
Relation(TaskManagerImpl;getRootTask;setExpand,MutableTask,boolean);
Relation(TaskManagerImpl;getRootTask;setStart,MutableTask,GanttCalendar);
Relation(TaskManagerImpl;getTask;get,Map,Object);
Relation(TaskManagerImpl;registerTask;get,Map,Object);
Relation(TaskManagerImpl;registerTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;registerTask;getTaskID,Task,N);
Relation(TaskManagerImpl;registerTask;put,Map,Object-Object);
Relation(TaskManagerImpl;registerTask;setMaxID,TaskManagerImpl,int);
Relation(TaskManagerImpl;setTask;getMaxID,TaskManagerImpl,N);
Relation(TaskManagerImpl;setTask;getTaskID,Task,N);
Relation(TaskManagerImpl;setTask;put,Map,Object-Object);
Relation(TaskManagerImpl;setTask;setMaxID,TaskManagerImpl,int);
end b26
start b27
Attribute(ChartHeaderImpl,myChartModel,ChartModelImpl,N,private);
Attribute(ChartModelImpl,myAtomUnitPixels,int,N,private);
Attribute(ChartModelImpl,myBottomUnit,TimeUnit,N,private);
Attribute(ChartModelImpl,myBounds,Dimension,N,private);
Attribute(ChartModelImpl,myChartHeader,ChartHeader,N,private);
Attribute(ChartModelImpl,myChartUIConfiguration,ChartUIConfiguration,N,private);
Attribute(ChartModelImpl,myStartDate,Date,N,private);
Attribute(ChartModelImpl,myTimeFrames,TimeFrame[],N,private);
Attribute(ChartModelImpl,myTimeUnitStack,GregorianTimeUnitStack,N,private);
Attribute(ChartModelImpl,myTopUnit,TimeUnit,N,private);
Class(ChartModelImpl,N,N,public);
Method(ChartModelImpl,ChartModelImpl,N,N,N,N,public);
Method(ChartModelImpl,calculateTimeFrames,TimeFrame[],N,N,N,private);
Method(ChartModelImpl,getBottomUnitWidth,int,N,N,N,package);
Method(ChartModelImpl,getBounds,Dimension,N,N,N,package);
Method(ChartModelImpl,getChartHeader,ChartHeader,N,N,N,public);
Method(ChartModelImpl,getChartUIConfiguration,ChartUIConfiguration,N,N,N,package);
Method(ChartModelImpl,getTimeFrames,TimeFrame[],N,N,N,package);
Method(ChartModelImpl,setBottomTimeUnit,void,Y,N,N,public);
Method(ChartModelImpl,setBottomUnitWidth,void,Y,N,N,public);
Method(ChartModelImpl,setBounds,void,Y,N,N,public);
Method(ChartModelImpl,setStartDate,void,Y,N,N,public);
Method(ChartModelImpl,setTopTimeUnit,void,Y,N,N,public);
Parameter(ChartHeaderImpl,ChartHeaderImpl,model,ChartModelImpl,declaration);
Parameter(ChartModelImpl,calculateTimeFrames,currentDateDate,local);
Parameter(ChartModelImpl,calculateTimeFrames,currentFrameTimeFrame,local);
Parameter(ChartModelImpl,calculateTimeFrames,resultArrayList,local);
Parameter(ChartModelImpl,calculateTimeFrames,totalFramesWidthint,local);
Parameter(ChartModelImpl,setBottomTimeUnit,bottomTimeUnit,TimeUnit,declaration);
Parameter(ChartModelImpl,setBottomUnitWidth,pixelsWidth,int,declaration);
Parameter(ChartModelImpl,setBounds,bounds,Dimension,declaration);
Parameter(ChartModelImpl,setStartDate,startDate,Date,declaration);
Parameter(ChartModelImpl,setTopTimeUnit,topTimeUnit,TimeUnit,declaration);
Relation(ChartHeaderImpl;createFrames;getBottomUnitWidth,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;createFrames;getTimeFrames,ChartModelImpl,N);
Relation(ChartHeaderImpl;createGreyRectangleWithNiceBorders;getChartUIConfiguration,ChartModelImpl,N);
Relation(ChartHeaderImpl;getHeight;getBounds,ChartModelImpl,N);
Relation(ChartHeaderImpl;getWidth;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;add,ArrayList,Object);
Relation(ChartModelImpl;calculateTimeFrames;createTimeFrame,GregorianTimeUnitStack,Date-TimeUnit-TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getBounds,ChartModelImpl,N);
Relation(ChartModelImpl;calculateTimeFrames;getFinishDate,TimeFrame,N);
Relation(ChartModelImpl;calculateTimeFrames;getUnitCount,TimeFrame,TimeUnit);
Relation(ChartModelImpl;calculateTimeFrames;getWidth,Dimension,N);
Relation(ChartModelImpl;calculateTimeFrames;toArray,ArrayList,Object[]);
Relation(ChartModelImpl;getTimeFrames;calculateTimeFrames,ChartModelImpl,N);
Relation(ChartModelImpl;setStartDate;equals,Date,Object);
Relation(ChartModelImpl;setStartDate;println,PrintStream,String);
Relation(ChartModelImpl;setTopTimeUnit;createTimeUnit,TimeUnitFunctionOfDate,Date);
end b27
start b28
Class(RangeSearchFromKey,N,N,package);
Generalisation(RangeSearchFromKey,SearchKey);
Method(RangeSearchFromKey,RangeSearchFromKey,N,Y,N,N,public);
Parameter(RangeSearchFromKey,RangeSearchFromKey,task,Task,declaration);
Relation(RangeSearchFromKey;RangeSearchFromKey;getTaskID,Task,N);
end b28
start b29
Class(TaskListenerAdapter,abstract,N,public);
Method(TaskListenerAdapter,dependencyAdded,void,Y,N,N,public);
Method(TaskListenerAdapter,dependencyRemoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskAdded,void,Y,N,N,public);
Method(TaskListenerAdapter,taskMoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskRemoved,void,Y,N,N,public);
Method(TaskListenerAdapter,taskScheduleChanged,void,Y,N,N,public);
Parameter(TaskListenerAdapter,dependencyAdded,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,dependencyRemoved,e,TaskDependencyEvent,declaration);
Parameter(TaskListenerAdapter,taskAdded,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskMoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskRemoved,e,TaskHierarchyEvent,declaration);
Parameter(TaskListenerAdapter,taskScheduleChanged,e,TaskScheduleEvent,declaration);
end b29
start b30
Attribute(WizardImpl,myBackAction,BackAction,N,private);
Class(BackAction,N,N,public);
end b30